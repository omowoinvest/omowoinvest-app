import React, { FC } from "react";
import { SvgXml } from "react-native-svg"; 

interface Props {
    width?: number,
    height?: number
}

export const HomeActive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.7071 2.29289C12.3166 1.90236 11.6834 1.90236 11.2929 2.29289L4.29324 9.29253C4.293 9.29277 4.29277 9.293 4.29253 9.29324L2.29289 11.2929C1.90236 11.6834 1.90236 12.3166 2.29289 12.7071C2.68341 13.0976 3.31657 13.0976 3.7071 12.7071L3.99999 12.4142V20C3.99999 21.1046 4.89542 22 5.99999 22H18C19.1046 22 20 21.1046 20 20V12.4142L20.2929 12.7071C20.6834 13.0976 21.3166 13.0976 21.7071 12.7071C22.0976 12.3166 22.0976 11.6834 21.7071 11.2929L12.7071 2.29289ZM18 10.4142L12 4.41421L5.99999 10.4142V20H18V10.4142Z" fill="#0694C0"/>
    <circle cx="12" cy="13" r="3" fill="#0694C0"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} width={width} height={height} />
    return <SvgImg />
}

export const HomeInactive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.7071 2.29289C12.3166 1.90236 11.6834 1.90236 11.2929 2.29289L4.29324 9.29253C4.293 9.29277 4.29277 9.293 4.29253 9.29324L2.29289 11.2929C1.90236 11.6834 1.90236 12.3166 2.29289 12.7071C2.68341 13.0976 3.31657 13.0976 3.7071 12.7071L3.99999 12.4142V20C3.99999 21.1046 4.89542 22 5.99999 22H18C19.1046 22 20 21.1046 20 20V12.4142L20.2929 12.7071C20.6834 13.0976 21.3166 13.0976 21.7071 12.7071C22.0976 12.3166 22.0976 11.6834 21.7071 11.2929L12.7071 2.29289ZM18 10.4142L12 4.41421L5.99999 10.4142V20H18V10.4142Z" fill="#A6AFBB"/>
    <circle cx="12" cy="13" r="3" stroke="#A6AFBB" stroke-width="2"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const PlansActive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <circle cx="17" cy="7" r="4" fill="#0694C0"/>
    <circle cx="7" cy="7" r="3" stroke="#0694C0" stroke-width="2"/>
    <circle cx="7" cy="17" r="3" stroke="#0694C0" stroke-width="2"/>
    <circle cx="17" cy="17" r="3" stroke="#0694C0" stroke-width="2"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const PlansInactive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <circle cx="17" cy="7" r="3" stroke="#A6AFBB" stroke-width="2"/>
    <circle cx="7" cy="7" r="3" stroke="#A6AFBB" stroke-width="2"/>
    <circle cx="7" cy="17" r="3" stroke="#A6AFBB" stroke-width="2"/>
    <circle cx="17" cy="17" r="3" stroke="#A6AFBB" stroke-width="2"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const WalletActive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M12 12C12 10.3431 13.3431 9 15 9H21C21.5523 9 22 9.44772 22 10V14C22 14.5523 21.5523 15 21 15H15C13.3431 15 12 13.6569 12 12Z" fill="#0694C0"/>
    <circle cx="15" cy="12" r="1" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5 4C3.34315 4 2 5.34315 2 7V17C2 18.6569 3.34315 20 5 20H17C18.6569 20 20 18.6569 20 17V16H18V17C18 17.5523 17.5523 18 17 18H5C4.44772 18 4 17.5523 4 17V7C4 6.44772 4.44772 6 5 6H17C17.5523 6 18 6.44772 18 7V8H20V7C20 5.34315 18.6569 4 17 4H5Z" fill="#0694C0"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const WalletInactive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M19 9V7C19 5.89543 18.1046 5 17 5H5C3.89543 5 3 5.89543 3 7V17C3 18.1046 3.89543 19 5 19H17C18.1046 19 19 18.1046 19 17V15" stroke="#A6AFBB" stroke-width="2"/>
    <path d="M12 12C12 10.3431 13.3431 9 15 9H20C20.5523 9 21 9.44772 21 10V14C21 14.5523 20.5523 15 20 15H15C13.3431 15 12 13.6569 12 12V12Z" stroke="#A6AFBB" stroke-width="2"/>
    <circle cx="15" cy="12" r="1" fill="#A6AFBB"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const ChatActive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="2" y="4" width="16" height="8" rx="4" fill="#0694C0" stroke="#0694C0" stroke-width="2"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.04235 14.3463C4.01441 14.5603 4 14.7784 4 15C4 17.7614 6.23858 20 9 20H17C19.7614 20 22 17.7614 22 15C22 13.4719 21.3145 12.1039 20.2342 11.1868C19.9254 11.7896 19.5318 12.3418 19.069 12.8276C19.6425 13.374 20 14.1453 20 15C20 16.6569 18.6569 18 17 18H9C7.34315 18 6 16.6569 6 15C6 14.9763 6.00027 14.9528 6.00082 14.9292C5.31038 14.8306 4.65243 14.6311 4.04235 14.3463Z" fill="#0694C0"/>
    <circle cx="7" cy="8" r="1" fill="white"/>
    <circle cx="10" cy="8" r="1" fill="white"/>
    <circle cx="13" cy="8" r="1" fill="white"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const ChatInactive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect x="2" y="4" width="16" height="8" rx="4" stroke="#A6AFBB" stroke-width="2"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.04235 14.3463C4.01441 14.5603 4 14.7784 4 15C4 17.7614 6.23858 20 9 20H17C19.7614 20 22 17.7614 22 15C22 13.4719 21.3145 12.1039 20.2342 11.1868C19.9254 11.7896 19.5318 12.3418 19.069 12.8276C19.6425 13.374 20 14.1453 20 15C20 16.6569 18.6569 18 17 18H9C7.34315 18 6 16.6569 6 15C6 14.9763 6.00027 14.9528 6.00082 14.9292C5.31038 14.8306 4.65243 14.6311 4.04235 14.3463Z" fill="#A6AFBB"/>
    <circle cx="7" cy="8" r="1" fill="#A6AFBB"/>
    <circle cx="10" cy="8" r="1" fill="#A6AFBB"/>
    <circle cx="13" cy="8" r="1" fill="#A6AFBB"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const MoreActive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.3974 5.4579L9.70337 6.35076L10.3412 6.13218V5.4579H9.3974ZM7.0684 6.80444L6.59648 7.62182L7.18057 7.95905L7.68883 7.5157L7.0684 6.80444ZM5.7246 6.0286L6.19652 5.21121L5.7246 6.0286ZM4.48405 6.361L5.30143 6.83292H5.30143L4.48405 6.361ZM3.12182 8.72045L2.30444 8.24853H2.30444L3.12182 8.72045ZM3.45423 9.96101L2.98231 10.7784H2.98231L3.45423 9.96101ZM4.79689 10.7362L5.72333 10.9165L5.85201 10.2555L5.26881 9.91881L4.79689 10.7362ZM4.79688 13.4268L5.2688 14.2442L5.85199 13.9075L5.72332 13.2464L4.79688 13.4268ZM3.45423 14.202L2.98232 13.3846H2.98232L3.45423 14.202ZM3.12183 15.4425L3.93921 14.9706L3.93921 14.9706L3.12183 15.4425ZM4.48406 17.802L5.30144 17.33H5.30144L4.48406 17.802ZM5.72461 18.1344L5.2527 17.317L5.2527 17.317L5.72461 18.1344ZM7.06836 17.3586L7.68879 16.6473L7.18054 16.2039L6.59644 16.5412L7.06836 17.3586ZM9.3974 18.7051H10.3412V18.0308L9.70337 17.8123L9.3974 18.7051ZM13.9382 18.7051L13.6322 17.8122L12.9943 18.0308V18.7051H13.9382ZM16.2671 17.3585L16.739 16.5412L16.1549 16.2039L15.6467 16.6473L16.2671 17.3585ZM17.6109 18.1344L18.0828 17.317L17.6109 18.1344ZM18.8515 17.802L18.0341 17.33L18.0341 17.33L18.8515 17.802ZM20.2137 15.4425L19.3963 14.9706V14.9706L20.2137 15.4425ZM19.8813 14.202L20.3532 13.3846H20.3532L19.8813 14.202ZM18.5386 13.4268L17.6122 13.2464L17.4835 13.9074L18.0667 14.2441L18.5386 13.4268ZM18.5386 10.7362L18.0667 9.91883L17.4835 10.2555L17.6121 10.9166L18.5386 10.7362ZM19.8813 9.961L19.4094 9.14362V9.14362L19.8813 9.961ZM20.2137 8.72045L21.0311 8.24853L21.0311 8.24853L20.2137 8.72045ZM18.8515 6.361L19.6688 5.88908V5.88908L18.8515 6.361ZM17.6109 6.02859L17.139 5.21121V5.21121L17.6109 6.02859ZM16.2671 6.80445L15.6467 7.51571L16.1549 7.95906L16.739 7.62183L16.2671 6.80445ZM13.9382 5.45793H12.9943V6.1322L13.6322 6.35079L13.9382 5.45793ZM13.03 3.94383C13.0103 3.94383 12.9943 3.92786 12.9943 3.90815H14.882C14.882 2.88533 14.0528 2.05617 13.03 2.05617V3.94383ZM10.3055 3.94383H13.03V2.05617H10.3055V3.94383ZM10.3412 3.90815C10.3412 3.92786 10.3253 3.94383 10.3055 3.94383V2.05617C9.28273 2.05617 8.45356 2.88533 8.45356 3.90815H10.3412ZM10.3412 5.4579V3.90815H8.45356V5.4579H10.3412ZM7.68883 7.5157C8.27331 7.00586 8.95574 6.60696 9.70337 6.35076L9.09143 4.56504C8.1084 4.9019 7.2132 5.42567 6.44797 6.09318L7.68883 7.5157ZM5.25269 6.84598L6.59648 7.62182L7.54032 5.98705L6.19652 5.21121L5.25269 6.84598ZM5.30143 6.83292C5.29158 6.84999 5.26975 6.85583 5.25269 6.84598L6.19652 5.21121C5.31073 4.6998 4.17807 5.0033 3.66666 5.88909L5.30143 6.83292ZM3.9392 9.19236L5.30143 6.83292L3.66666 5.88909L2.30444 8.24853L3.9392 9.19236ZM3.92614 9.14362C3.94321 9.15348 3.94906 9.1753 3.9392 9.19236L2.30444 8.24853C1.79302 9.13432 2.09652 10.267 2.98231 10.7784L3.92614 9.14362ZM5.26881 9.91881L3.92614 9.14362L2.98231 10.7784L4.32497 11.5536L5.26881 9.91881ZM5.61157 12.0815C5.61157 11.6822 5.65009 11.2928 5.72333 10.9165L3.87045 10.5558C3.77419 11.0503 3.7239 11.5605 3.7239 12.0815H5.61157ZM5.72332 13.2464C5.65008 12.8702 5.61157 12.4808 5.61157 12.0815H3.7239C3.7239 12.6025 3.77418 13.1127 3.87044 13.6071L5.72332 13.2464ZM3.92615 15.0193L5.2688 14.2442L4.32496 12.6094L2.98232 13.3846L3.92615 15.0193ZM3.93921 14.9706C3.94907 14.9877 3.94322 15.0095 3.92615 15.0193L2.98232 13.3846C2.09653 13.896 1.79303 15.0286 2.30445 15.9144L3.93921 14.9706ZM5.30144 17.33L3.93921 14.9706L2.30445 15.9144L3.66667 18.2739L5.30144 17.33ZM5.2527 17.317C5.26976 17.3071 5.29159 17.313 5.30144 17.33L3.66667 18.2739C4.17808 19.1597 5.31074 19.4632 6.19653 18.9517L5.2527 17.317ZM6.59644 16.5412L5.2527 17.317L6.19653 18.9517L7.54027 18.1759L6.59644 16.5412ZM9.70337 17.8123C8.95573 17.5561 8.27328 17.1572 7.68879 16.6473L6.44792 18.0698C7.21316 18.7373 8.10838 19.2611 9.09143 19.598L9.70337 17.8123ZM10.3412 20.2549V18.7051H8.45356V20.2549H10.3412ZM10.3055 20.2192C10.3253 20.2192 10.3412 20.2352 10.3412 20.2549H8.45356C8.45356 21.2777 9.28272 22.1069 10.3055 22.1069V20.2192ZM13.03 20.2192H10.3055V22.1069H13.03V20.2192ZM12.9943 20.2549C12.9943 20.2352 13.0103 20.2192 13.03 20.2192V22.1069C14.0528 22.1069 14.882 21.2777 14.882 20.2549H12.9943ZM12.9943 18.7051V20.2549H14.882V18.7051H12.9943ZM15.6467 16.6473C15.0622 17.1571 14.3798 17.556 13.6322 17.8122L14.2441 19.598C15.2272 19.2611 16.1223 18.7373 16.8876 18.0698L15.6467 16.6473ZM18.0828 17.317L16.739 16.5412L15.7952 18.1759L17.139 18.9517L18.0828 17.317ZM18.0341 17.33C18.0439 17.313 18.0658 17.3071 18.0828 17.317L17.139 18.9517C18.0248 19.4632 19.1574 19.1597 19.6688 18.2739L18.0341 17.33ZM19.3963 14.9706L18.0341 17.33L19.6688 18.2739L21.0311 15.9144L19.3963 14.9706ZM19.4094 15.0193C19.3923 15.0095 19.3864 14.9877 19.3963 14.9706L21.0311 15.9144C21.5425 15.0286 21.239 13.896 20.3532 13.3846L19.4094 15.0193ZM18.0667 14.2441L19.4094 15.0193L20.3532 13.3846L19.0105 12.6094L18.0667 14.2441ZM17.7239 12.0815C17.7239 12.4808 17.6854 12.8702 17.6122 13.2464L19.465 13.6071C19.5613 13.1126 19.6116 12.6025 19.6116 12.0815H17.7239ZM17.6121 10.9166C17.6854 11.2928 17.7239 11.6822 17.7239 12.0815H19.6116C19.6116 11.5605 19.5613 11.0503 19.465 10.5559L17.6121 10.9166ZM19.4094 9.14362L18.0667 9.91883L19.0105 11.5536L20.3532 10.7784L19.4094 9.14362ZM19.3963 9.19236C19.3865 9.1753 19.3923 9.15347 19.4094 9.14362L20.3532 10.7784C21.239 10.267 21.5425 9.13432 21.0311 8.24853L19.3963 9.19236ZM18.0341 6.83292L19.3963 9.19236L21.0311 8.24853L19.6688 5.88908L18.0341 6.83292ZM18.0828 6.84598C18.0658 6.85583 18.0439 6.84998 18.0341 6.83292L19.6688 5.88908C19.1574 5.00329 18.0248 4.6998 17.139 5.21121L18.0828 6.84598ZM16.739 7.62183L18.0828 6.84598L17.139 5.21121L15.7952 5.98707L16.739 7.62183ZM13.6322 6.35079C14.3798 6.60699 15.0622 7.00588 15.6467 7.51571L16.8875 6.09319C16.1223 5.4257 15.2271 4.90194 14.2441 4.56507L13.6322 6.35079ZM12.9943 3.90815V5.45793H14.882V3.90815H12.9943Z" fill="#0694C0"/>
<circle cx="11.6678" cy="12.0816" r="2.91849" fill="#0694C0"/>
</svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}

export const MoreInactive: FC<Props> = ({height, width})=> {
    const markup = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M9.3974 5.4579L9.70337 6.35076L10.3412 6.13218V5.4579H9.3974ZM7.0684 6.80444L6.59648 7.62182L7.18057 7.95905L7.68883 7.5157L7.0684 6.80444ZM5.7246 6.0286L6.19652 5.21121L5.7246 6.0286ZM4.48405 6.361L5.30143 6.83292H5.30143L4.48405 6.361ZM3.12182 8.72045L2.30444 8.24853H2.30444L3.12182 8.72045ZM3.45423 9.96101L2.98231 10.7784H2.98231L3.45423 9.96101ZM4.79689 10.7362L5.72333 10.9165L5.85201 10.2555L5.26881 9.91881L4.79689 10.7362ZM4.79688 13.4268L5.2688 14.2442L5.85199 13.9075L5.72332 13.2464L4.79688 13.4268ZM3.45423 14.202L2.98232 13.3846H2.98232L3.45423 14.202ZM3.12183 15.4425L3.93921 14.9706L3.93921 14.9706L3.12183 15.4425ZM4.48406 17.802L5.30144 17.33H5.30144L4.48406 17.802ZM5.72461 18.1344L5.2527 17.317L5.2527 17.317L5.72461 18.1344ZM7.06836 17.3586L7.68879 16.6473L7.18054 16.2039L6.59644 16.5412L7.06836 17.3586ZM9.3974 18.7051H10.3412V18.0308L9.70337 17.8123L9.3974 18.7051ZM13.9382 18.7051L13.6322 17.8122L12.9943 18.0308V18.7051H13.9382ZM16.2671 17.3585L16.739 16.5412L16.1549 16.2039L15.6467 16.6473L16.2671 17.3585ZM17.6109 18.1344L18.0828 17.317L17.6109 18.1344ZM18.8515 17.802L18.0341 17.33L18.0341 17.33L18.8515 17.802ZM20.2137 15.4425L19.3963 14.9706V14.9706L20.2137 15.4425ZM19.8813 14.202L20.3532 13.3846H20.3532L19.8813 14.202ZM18.5386 13.4268L17.6122 13.2464L17.4835 13.9074L18.0667 14.2441L18.5386 13.4268ZM18.5386 10.7362L18.0667 9.91883L17.4835 10.2555L17.6121 10.9166L18.5386 10.7362ZM19.8813 9.961L19.4094 9.14362V9.14362L19.8813 9.961ZM20.2137 8.72045L21.0311 8.24853L21.0311 8.24853L20.2137 8.72045ZM18.8515 6.361L19.6688 5.88908V5.88908L18.8515 6.361ZM17.6109 6.02859L17.139 5.21121V5.21121L17.6109 6.02859ZM16.2671 6.80445L15.6467 7.51571L16.1549 7.95906L16.739 7.62183L16.2671 6.80445ZM13.9382 5.45793H12.9943V6.1322L13.6322 6.35079L13.9382 5.45793ZM13.03 3.94383C13.0103 3.94383 12.9943 3.92786 12.9943 3.90815H14.882C14.882 2.88533 14.0528 2.05617 13.03 2.05617V3.94383ZM10.3055 3.94383H13.03V2.05617H10.3055V3.94383ZM10.3412 3.90815C10.3412 3.92786 10.3253 3.94383 10.3055 3.94383V2.05617C9.28273 2.05617 8.45356 2.88533 8.45356 3.90815H10.3412ZM10.3412 5.4579V3.90815H8.45356V5.4579H10.3412ZM7.68883 7.5157C8.27331 7.00586 8.95574 6.60696 9.70337 6.35076L9.09143 4.56504C8.1084 4.9019 7.2132 5.42567 6.44797 6.09318L7.68883 7.5157ZM5.25269 6.84598L6.59648 7.62182L7.54032 5.98705L6.19652 5.21121L5.25269 6.84598ZM5.30143 6.83292C5.29158 6.84999 5.26975 6.85583 5.25269 6.84598L6.19652 5.21121C5.31073 4.6998 4.17807 5.0033 3.66666 5.88909L5.30143 6.83292ZM3.9392 9.19236L5.30143 6.83292L3.66666 5.88909L2.30444 8.24853L3.9392 9.19236ZM3.92614 9.14362C3.94321 9.15348 3.94906 9.1753 3.9392 9.19236L2.30444 8.24853C1.79302 9.13432 2.09652 10.267 2.98231 10.7784L3.92614 9.14362ZM5.26881 9.91881L3.92614 9.14362L2.98231 10.7784L4.32497 11.5536L5.26881 9.91881ZM5.61157 12.0815C5.61157 11.6822 5.65009 11.2928 5.72333 10.9165L3.87045 10.5558C3.77419 11.0503 3.7239 11.5605 3.7239 12.0815H5.61157ZM5.72332 13.2464C5.65008 12.8702 5.61157 12.4808 5.61157 12.0815H3.7239C3.7239 12.6025 3.77418 13.1127 3.87044 13.6071L5.72332 13.2464ZM3.92615 15.0193L5.2688 14.2442L4.32496 12.6094L2.98232 13.3846L3.92615 15.0193ZM3.93921 14.9706C3.94907 14.9877 3.94322 15.0095 3.92615 15.0193L2.98232 13.3846C2.09653 13.896 1.79303 15.0286 2.30445 15.9144L3.93921 14.9706ZM5.30144 17.33L3.93921 14.9706L2.30445 15.9144L3.66667 18.2739L5.30144 17.33ZM5.2527 17.317C5.26976 17.3071 5.29159 17.313 5.30144 17.33L3.66667 18.2739C4.17808 19.1597 5.31074 19.4632 6.19653 18.9517L5.2527 17.317ZM6.59644 16.5412L5.2527 17.317L6.19653 18.9517L7.54027 18.1759L6.59644 16.5412ZM9.70337 17.8123C8.95573 17.5561 8.27328 17.1572 7.68879 16.6473L6.44792 18.0698C7.21316 18.7373 8.10838 19.2611 9.09143 19.598L9.70337 17.8123ZM10.3412 20.2549V18.7051H8.45356V20.2549H10.3412ZM10.3055 20.2192C10.3253 20.2192 10.3412 20.2352 10.3412 20.2549H8.45356C8.45356 21.2777 9.28272 22.1069 10.3055 22.1069V20.2192ZM13.03 20.2192H10.3055V22.1069H13.03V20.2192ZM12.9943 20.2549C12.9943 20.2352 13.0103 20.2192 13.03 20.2192V22.1069C14.0528 22.1069 14.882 21.2777 14.882 20.2549H12.9943ZM12.9943 18.7051V20.2549H14.882V18.7051H12.9943ZM15.6467 16.6473C15.0622 17.1571 14.3798 17.556 13.6322 17.8122L14.2441 19.598C15.2272 19.2611 16.1223 18.7373 16.8876 18.0698L15.6467 16.6473ZM18.0828 17.317L16.739 16.5412L15.7952 18.1759L17.139 18.9517L18.0828 17.317ZM18.0341 17.33C18.0439 17.313 18.0658 17.3071 18.0828 17.317L17.139 18.9517C18.0248 19.4632 19.1574 19.1597 19.6688 18.2739L18.0341 17.33ZM19.3963 14.9706L18.0341 17.33L19.6688 18.2739L21.0311 15.9144L19.3963 14.9706ZM19.4094 15.0193C19.3923 15.0095 19.3864 14.9877 19.3963 14.9706L21.0311 15.9144C21.5425 15.0286 21.239 13.896 20.3532 13.3846L19.4094 15.0193ZM18.0667 14.2441L19.4094 15.0193L20.3532 13.3846L19.0105 12.6094L18.0667 14.2441ZM17.7239 12.0815C17.7239 12.4808 17.6854 12.8702 17.6122 13.2464L19.465 13.6071C19.5613 13.1126 19.6116 12.6025 19.6116 12.0815H17.7239ZM17.6121 10.9166C17.6854 11.2928 17.7239 11.6822 17.7239 12.0815H19.6116C19.6116 11.5605 19.5613 11.0503 19.465 10.5559L17.6121 10.9166ZM19.4094 9.14362L18.0667 9.91883L19.0105 11.5536L20.3532 10.7784L19.4094 9.14362ZM19.3963 9.19236C19.3865 9.1753 19.3923 9.15347 19.4094 9.14362L20.3532 10.7784C21.239 10.267 21.5425 9.13432 21.0311 8.24853L19.3963 9.19236ZM18.0341 6.83292L19.3963 9.19236L21.0311 8.24853L19.6688 5.88908L18.0341 6.83292ZM18.0828 6.84598C18.0658 6.85583 18.0439 6.84998 18.0341 6.83292L19.6688 5.88908C19.1574 5.00329 18.0248 4.6998 17.139 5.21121L18.0828 6.84598ZM16.739 7.62183L18.0828 6.84598L17.139 5.21121L15.7952 5.98707L16.739 7.62183ZM13.6322 6.35079C14.3798 6.60699 15.0622 7.00588 15.6467 7.51571L16.8875 6.09319C16.1223 5.4257 15.2271 4.90194 14.2441 4.56507L13.6322 6.35079ZM12.9943 3.90815V5.45793H14.882V3.90815H12.9943Z" fill="#A6AFBB"/>
    <circle cx="11.6678" cy="12.0816" r="2.91849" stroke="#A6AFBB" stroke-width="2"/>
    </svg>`

    const SvgImg = () => <SvgXml xml={markup} height={height} width={width}  />
    return <SvgImg />
}
